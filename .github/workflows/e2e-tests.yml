name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements-dev.txt

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env

      - name: Start backend with Docker Compose
        run: |
          docker compose up -d

      - name: Run database migrations
        run: |
          docker compose exec -T tagline-backend-dev alembic upgrade head

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8000/ | grep '"status"'; then
              echo "Backend is up!"
              exit 0
            fi
            echo "Waiting for backend... ($i)"
            sleep 2
          done
          echo "Backend did not start in time" >&2
          docker compose logs
          exit 1

      - name: Run E2E tests
        run: |
          source venv/bin/activate
          pytest -m e2e --maxfail=1 --disable-warnings -v

      - name: Show backend logs on failure
        if: failure()
        run: |
          docker compose logs
